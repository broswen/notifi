---
# Source: api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: api
  namespace: notifi
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  DSN: cG9zdGdyZXM6Ly9wb3N0Z3JlczpwYXNzd29yZEBwb3N0Z3Jlcy5wb3N0Z3Jlcy5zdmMuY2x1c3Rlci5sb2NhbDo1NDMyL25vdGlmaQ==
---
# Source: api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: api
  namespace: notifi
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_PORT: "8080"
  BROKERS: kafka-clusterip.kafka.svc.cluster.local:9092
  METRICS_PATH: /metrics
  METRICS_PORT: "8081"
  POLICY_AUD: <cloudflare access app policy aud>
  REQUEST_TOPIC: notifi-request
  TEAM_DOMAIN: <cloudflare access team domain>
---
# Source: api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: notifi
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
---
# Source: api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: notifi
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: api
        app.kubernetes.io/instance: api
    spec:
      securityContext:
        {}
      containers:
        - name: api
          securityContext:
            {}
          image: "broswen/notifi:latest"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: api
            - secretRef:
                name: api
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /healthcheck
              port: http
          resources:
            limits:
              cpu: 150m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: notifi
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "notifi.broswen.com"
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 8080
